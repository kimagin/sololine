{"version":3,"sources":["../src/functions/log.ts"],"names":[],"mappings":";AA8BO,SAAS,IACd,SACA,UAAsB,CAAC,GACjB;AACN,QAAM,EAAE,QAAQ,OAAO,QAAQ,IAAI,OAAO,MAAM,IAAI;AACpD,QAAM,YAAY,QAAO,oBAAI,KAAK,GAAE,mBAAmB,IAAI;AAC3D,QAAM,aAAa,GAAG,SAAS,IAAI,SAAS,IAAI,KAAK,GAAG,IAAI,OAAO,GAAG,KAAK;AAE3E,QAAM,SAGF;AAAA,IACF,KAAK,EAAE,QAAQ,QAAQ,KAAK,OAAO,UAAU;AAAA,IAC7C,MAAM,EAAE,QAAQ,QAAQ,MAAM,OAAO,UAAU;AAAA,IAC/C,MAAM,EAAE,QAAQ,QAAQ,MAAM,OAAO,UAAU;AAAA,IAC/C,OAAO,EAAE,QAAQ,QAAQ,OAAO,OAAO,UAAU;AAAA,EACnD;AAEA,QAAM,EAAE,QAAQ,MAAM,IAAI,OAAO,KAAK;AACtC,QAAM,QAAQ,UAAU,KAAK;AAE7B,SAAO,KAAK,UAAU,IAAI,KAAK;AACjC","sourcesContent":["type LogLevel = 'log' | 'info' | 'warn' | 'error'\n\ninterface LogOptions {\n  label?: string | number | boolean\n  level?: LogLevel\n  time?: boolean\n}\n\n/**\n *\n * ---\n * **Description:**\n * *Logs a message with optional label, level, and timestamp.*\n *\n * **Example usage:**\n * ```js\n * const originalText = \"Hello World\";\n * const logOptions = { level: 'info', label: '', time: false };\n * log(originalText, logOptions);\n * console.log(\"hello-world\");\n * ```\n * ---\n *\n * @param {string} content *input: the content of the log message.*\n * @param {LogOptions} [options] **Options :**\n * - **label:** A string label for the log message.\n * - **level:** The level of the log message (log, info, warn, or error).\n * - **time:** Whether to include a timestamp in the log message.\n * @returns {void}\n */\nexport function log(\n  content: string | number | boolean,\n  options: LogOptions = {}\n): void {\n  const { level = 'log', label = '', time = false } = options\n  const timestamp = time ? new Date().toLocaleTimeString() : ''\n  const logMessage = `${timestamp} ${label && `[${label}]`} ${content}`.trim()\n\n  const levels: Record<\n    LogLevel,\n    { method: (...args: any[]) => void; color: string }\n  > = {\n    log: { method: console.log, color: '#A9A9A9' },\n    info: { method: console.info, color: '#12b85b' },\n    warn: { method: console.warn, color: '#FFD700' },\n    error: { method: console.error, color: '#FFA07A' },\n  }\n\n  const { method, color } = levels[level]\n  const style = `color: ${color}; font-weight: bold; font-style: italic;`\n\n  method(`%c${logMessage}`, style)\n}\n"]}